from flask import Blueprint, render_template, request, jsonify, current_app as app
from flask_login import login_required

from sqlalchemy.exc import SQLAlchemyError

from application.forms import VehicleSaleForm
from application.services import (
    document_template_service,
    questions_for_template_service,
    questions_service
)

# Create a Blueprint for the main routes
main_blueprint = Blueprint('main', __name__)

@main_blueprint.errorhandler(SQLAlchemyError)
def handle_database_errors(error):
    app.logger.error(f'Database error: {error}')
    return jsonify(success=False, error='A database error occurred'), 500

# Existing route definitions with improved error handling and logging
# For brevity, demonstrating with '/test' route
@main_blueprint.route('/test', methods=['GET', 'POST'])
@login_required
def test():
    try:
        document_types = document_template_service.get_document_types()
        return render_template('test.html', document_types=document_types)
    except SQLAlchemyError as e:
        app.logger.error(f"Error processing request: {e}")
        return jsonify(success=False, error=str(e)), 500
